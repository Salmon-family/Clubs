plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "kotlin-kapt"
    id 'dagger.hilt.android.plugin'
}
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(rootProject.file("secret.properties")))

android {
    namespace 'com.thechance.clubs'
    compileSdk 33

    defaultConfig {
        applicationId "com.thechance.clubs"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    flavorDimensions "dev", "prod"
    productFlavors {
        development {
            dimension "dev"
            applicationIdSuffix ".development"
            buildConfigField "String", "API_KEY", secretProperties['apiKey']
            buildConfigField "String", "BASE_URL", secretProperties['baseUrl']
        }
        production {
            dimension "prod"
            applicationIdSuffix ".production"
            buildConfigField "String", "API_KEY", secretProperties['apiKey']
            buildConfigField "String", "BASE_URL", secretProperties['baseUrl']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.3.1"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // core
    api(project(":core:ui"))
    api(project(":core:remote"))
    api(project(":core:repositories"))
    api(project(":core:useCases"))
    api(project(":core:viewModels"))
    implementation("androidx.compose.runtime:runtime:$compose_ui_version")
    //

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

}